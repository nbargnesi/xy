#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

AC_PREREQ([2.65])
AC_INIT([xy], [2012], [https://bitbucket.org/nbargnesi/xy/issues])
AM_INIT_AUTOMAKE([dist-bzip2 dist-xz])
AM_MAINTAINER_MODE
AC_CONFIG_SRCDIR([src])
AC_CONFIG_HEADERS([config.h])

AM_PROG_CC_C_O
AC_PROG_RANLIB

PKG_CHECK_MODULES([XLIB], [x11])
PKG_CHECK_MODULES([XINERAMA], [xinerama])
PKG_CHECK_MODULES([XFT], [xft])
PKG_CHECK_MODULES([XDAMAGE], [xdamage])
PKG_CHECK_MODULES([JANSSON], [jansson])

AC_CHECK_LIB(pthread, pthread_create)
AC_CHECK_LIB(log4c, log4c_init)
AC_CHECK_HEADERS(log4c.h)

AC_ARG_ENABLE(optimizations,
    AS_HELP_STRING([--enable-optimizations],
                   [Enable compiler optimizations (defaults to disabled)]),
    [optimize=yes],[optimize=no])

AC_ARG_ENABLE(tests,
    AS_HELP_STRING([--disable-tests],
                   [Disables unit tests (defaults to enabled)]),
    [testing=no],[testing=yes])

DEFAULT_CFLAGS="-pipe -std=c99 -Wall -Wunused -Wextra -Wno-unused-parameter"
if test "x$optimize" == "xyes"; then
    CFLAGS="${DEFAULT_CFLAGS} -O3"
else
    CFLAGS="${DEFAULT_CFLAGS} -O2 -g"
fi

if test "x$testing" == "xyes"; then
    PKG_CHECK_MODULES(CHECK, [check >= 0.9.8], have_check="yes", have_check="no")
else
    have_check=no
fi

if test "x$testing" == "xyes" -a "x$have_check" != "xyes"; then
    AC_MSG_ERROR([Testing dependencies not met. Check is required.])
fi
AM_CONDITIONAL(TESTING, test "x$have_check" = "xyes")

AC_TYPE_SIZE_T

AC_CONFIG_FILES([
                 Makefile
                 docs/Makefile
                 lib/Makefile
                 src/Makefile
                 tests/Makefile
])

AC_OUTPUT

if test "x$silent" != "xyes"; then
    printf "\n"
fi

printf "xy build configuration
----------------------
version         : ${VERSION}
cflags          : ${CFLAGS}
tests           : ${testing}
optimizations   : ${optimize}
"
